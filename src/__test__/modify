import NeDbModel from "@seald-io/nedb/lib/model";
import Datastore from "@seald-io/nedb";
import path from "path";
import { returnNewDocAndValidateUpserting } from "../utils";

export function makeQQ(query, updateQ) {
  let toBeInserted: T;
  try {
    NeDbModel.checkObject(updateQ);
    // updateQuery is a simple object with no modifier, use it as the document to insert
    toBeInserted = updateQ;
  } catch (e) {
    // updateQuery contains modifiers, use the find query as the base,
    // strip it from all operators and update it according to updateQuery
    toBeInserted = NeDbModel.modify(NeDbModel.deepCopy(query, true), updateQ);
  }
  return toBeInserted;
}

describe("test modify", () => {
  test("aaa", async () => {
    const doc = {
      name: "sergen",
      age: 28,
      cats: [1],
      address: {
        street: 12,
      },
      "humans.genders": { $eq: 5 },
    };

    const updateQ = {
      $inc: { age: 1 },
      $set: { name: "seda", "address.street": 99 },
    };

    const res = makeQQ({}, { $set: { age: 28, "human.g": "gg" } });
    console.log("res : ", res);

    // const dbPath = path.join(__dirname, "dbFiles/");
  });
});
